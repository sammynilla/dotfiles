From 178b81cece1c3fb0b8fbe17288205805c2683465 Mon Sep 17 00:00:00 2001
From: Samantha Bartlett <sammynilla@protonmail.com>
Date: Thu, 9 Jan 2025 10:05:22 -0900
Subject: [PATCH 6/6] scrollback mark patch (no altscreens)

---
 config.def.h |  6 ++++--
 st.c         | 42 ++++++++++++++++++++++++++++++++++++++++++
 st.h         |  3 +++
 3 files changed, 49 insertions(+), 2 deletions(-)

diff --git a/config.def.h b/config.def.h
index 492cbd9..9bbb605 100644
--- a/config.def.h
+++ b/config.def.h
@@ -222,8 +222,10 @@ static Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Y,           clippaste,      {.i =  0} },
 	{ ShiftMask,            XK_Insert,      clippaste,      {.i =  0} },
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
-	{ ShiftMask,            XK_Page_Up,     kscrollup,      {.i = -1}, -1 },
-	{ ShiftMask,            XK_Page_Down,   kscrolldown,    {.i = -1}, -1 },
+	{ ControlMask,          XK_Page_Up,     kscrolltoprevmark, { },     -1 },
+	{ ShiftMask,            XK_Page_Up,     kscrollup,      {.i = -1},  -1 },
+	{ ControlMask,          XK_Page_Down,   kscrolltonextmark, { },     -1 },
+	{ ShiftMask,            XK_Page_Down,   kscrolldown,    {.i = -1},  -1 },
 };
 
 /*
diff --git a/st.c b/st.c
index 6759cf4..464a08b 100644
--- a/st.c
+++ b/st.c
@@ -1105,6 +1105,45 @@ kscrollup(const Arg* a)
 	}
 }
 
+void
+kscrolltonextmark(const Arg* a)
+{
+	int orig_scr = term.scr;
+
+	while (--term.scr >= 0)
+		if (TLINE(0)->mode & ATTR_MARKED) {
+		found:
+			if (term.scr != orig_scr) {
+				selscroll(0, term.scr - orig_scr);
+				tfulldirt();
+			}
+			return;
+		}
+
+	term.scr = 0;
+	for(int i = 0; i < term.row; ++i)
+		if (TLINE(i)->mode & ATTR_MARKED)
+			goto found;
+
+	term.scr = orig_scr;
+}
+
+void
+kscrolltoprevmark(const Arg* a)
+{
+	int orig_scr = term.scr;
+
+	while (++term.scr <= HISTSIZE)
+		if (TLINE(0)->mode & ATTR_MARKED) {
+			selscroll(0, term.scr - orig_scr);
+			tfulldirt();
+			return;
+		}
+
+	term.scr = orig_scr;
+}
+
+
 void
 tscrolldown(int orig, int n, int copyhist)
 {
@@ -1882,6 +1921,9 @@ csihandle(void)
 			if (xsetcursor(csiescseq.arg[0]))
 				goto unknown;
 			break;
+		case 'm': /* mark line to quickly scroll back to later */
+			term.line[term.c.y]->mode |= ATTR_MARKED;
+			break;
 		default:
 			goto unknown;
 		}
diff --git a/st.h b/st.h
index a9f66a7..bec3b75 100644
--- a/st.h
+++ b/st.h
@@ -36,6 +36,7 @@ enum glyph_attribute {
 	ATTR_WDUMMY     = 1 << 10,
 	ATTR_BOXDRAW    = 1 << 11,
 	ATTR_LIGA       = 1 << 12,
+	ATTR_MARKED     = 1 << 13,
 	ATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,
 };
 
@@ -92,6 +93,8 @@ void draw(void);
 
 void kscrolldown(const Arg *);
 void kscrollup(const Arg *);
+void kscrolltonextmark(const Arg *);
+void kscrolltoprevmark(const Arg *);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
-- 
2.47.1

